#include <iostream>
#include <stack>
#include <string>
using namespace std;

class TextEditor {
private:
    string text;
    stack<string> undoStack;
    stack<string> redoStack;

public:
    void addText(const string& newText) {
        undoStack.push(text);  // Save current state before change
        text += newText;
        while (!redoStack.empty()) redoStack.pop(); // Clear redo stack
    }

    void undo() {
        if (undoStack.empty()) {
            cout << "Nothing to undo!\n";
            return;
        }
        redoStack.push(text);  // Save current state before undo
        text = undoStack.top(); // Restore previous state
        undoStack.pop();
    }

    void redo() {
        if (redoStack.empty()) {
            cout << "Nothing to redo!\n";
            return;
        }
        undoStack.push(text);  // Save current state before redo
        text = redoStack.top(); // Restore redone state
        redoStack.pop();
    }

    void display() const {
        cout << "Current Text: \"" << text << "\"\n";
    }
};

int main() {
    TextEditor editor;
    int choice;
    string input;

    while (true) {
        cout << "\n=== Text Editor ===\n";
        cout << "1. Add Text\n";
        cout << "2. Undo\n";
        cout << "3. Redo\n";
        cout << "4. Display Text\n";
        cout << "5. Exit\n";
        cout << "Choose an option: ";
        cin >> choice;
        cin.ignore();  // To clear newline from input buffer

        switch (choice) {
            case 1:
                cout << "Enter text to add: ";
                getline(cin, input);
                editor.addText(input);
                break;
            case 2:
                editor.undo();
                break;
            case 3:
                editor.redo();
                break;
            case 4:
                editor.display();
                break;
            case 5:
                cout << "Exiting...\n";
                return 0;
            default:
                cout << "Invalid choice!\n";
        }
    }

    return 0;
}
